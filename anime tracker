import streamlit as st
import json

# Title for the Streamlit app
st.title("HTML Program in Streamlit")

# Display the HTML content in Streamlit using markdown
html_content = """
# Welcome to Streamlit with HTML!
This is a simple HTML page rendered inside Streamlit.
"""

# Apply CSS styles directly in Streamlit
st.markdown(
    """
    <style>
        body {
            background-color: lightblue;
            text-align: center;
            font-family: Arial, sans-serif;
        }
        h1 {
            color: navy;
        }
        p {
            color: darkgreen;
        }
    </style>
    """,
    unsafe_allow_html=True,
)

st.markdown(html_content, unsafe_allow_html=True)

# Load user data from local storage (if exists)
users = {}
try:
    with open('users.json', 'r') as f:
        users = json.load(f)
except FileNotFoundError:
    pass

# User session management
if 'current_user' not in st.session_state:
    st.session_state.current_user = None

# Function to save users data
def save_users():
    with open('users.json', 'w') as f:
        json.dump(users, f)

# Login function
def login(email, password):
    if email in users and users[email]['password'] == password:
        st.session_state.current_user = email
        st.success("Login successful!")
    else:
        st.error("Invalid email or password!")

# Signup function
def signup(email, password):
    if email in users:
        st.error("Email already exists!")
    else:
        users[email] = {'password': password, 'anime_data': {'completed': [], 'continuing': [], 'watchlist': [], 'upcoming': []}}
        save_users()
        st.session_state.current_user = email
        st.success("Signup successful! You can now log in.")

# Logout function
def logout():
    st.session_state.current_user = None
    st.success("Logged out successfully!")

# Reset password function
def reset_password(email, new_password):
    if email in users:
        users[email]['password'] = new_password
        save_users()
        st.success("Password reset successful! You can now log in.")
    else:
        st.error("Email not found!")

# Main function for anime tracking
def show_anime_tracker():
    st.title("My Anime Tracker")
    st.write("Track your anime collection!")
    
    section = st.radio("Select Section", ["Completed", "Continuing", "Watchlist", "Upcoming"])

    anime_name = st.text_input("Anime Name")
    season_count = st.text_input("Season Count")
    rating = st.text_input("Rating")
    category = st.text_input("Category")
    
    if st.button(f"Add to {section}"):
        anime = [anime_name, season_count, rating, category]
        section_data = users[st.session_state.current_user]['anime_data'][section.lower()]
        section_data.append(anime)
        save_users()
        st.success(f"Added {anime_name} to {section} section!")
    
    # Display anime list for the selected section
    st.write(f"Anime in {section} section:")
    section_data = users[st.session_state.current_user]['anime_data'][section.lower()]
    if section_data:
        for anime in section_data:
            st.write(f"- {anime[0]} | Seasons: {anime[1]} | Rating: {anime[2]} | Category: {anime[3]}")
    else:
        st.write(f"No anime found in {section} section.")

# Streamlit App Flow
def main():
    st.sidebar.title("Anime Tracker App")
    menu = ["Home", "Login", "Signup", "Tracker", "Logout"]
    choice = st.sidebar.selectbox("Select Option", menu)
    
    # Home Page
    if choice == "Home":
        st.title("Welcome to Anime World")
        st.write("Enter the world where you can track and discover amazing anime!")
        st.button("Go to Login", on_click=lambda: st.session_state.update({'current_user': None}))

    # Login Page
    elif choice == "Login":
        if st.session_state.current_user is None:
            st.title("Login")
            email = st.text_input("Email")
            password = st.text_input("Password", type="password")
            
            if st.button("Login"):
                login(email, password)
        else:
            st.write(f"Welcome back, {st.session_state.current_user}!")
            st.button("Go to Tracker", on_click=show_anime_tracker)

    # Signup Page
    elif choice == "Signup":
        if st.session_state.current_user is None:
            st.title("Signup")
            email = st.text_input("Email")
            password = st.text_input("Password", type="password")
            
            if st.button("Sign Up"):
                signup(email, password)
        else:
            st.write(f"Welcome back, {st.session_state.current_user}!")
            st.button("Go to Tracker", on_click=show_anime_tracker)

    # Anime Tracker Page
    elif choice == "Tracker":
        if st.session_state.current_user is not None:
            show_anime_tracker()
        else:
            st.warning("You need to log in first!")
    
    # Logout Page
    elif choice == "Logout":
        if st.session_state.current_user is not None:
            logout()
        else:
            st.warning("You are not logged in!")

if __name__ == "__main__":
    main()

